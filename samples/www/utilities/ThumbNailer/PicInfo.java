/* * Steve O'Hara
 */import java.awt.image.BufferedImage;import java.io.File;import java.util.Calendar;import javax.imageio.ImageIO;public class PicInfo{    private Calendar now = Calendar.getInstance();    private int calmon = now.get(Calendar.MONTH) + 1;    private int calday = now.get(Calendar.DAY_OF_MONTH);    private int calyr = now.get(Calendar.YEAR);    private boolean doDate = true;        private String root;	// Typically "C:\\www2";
    private boolean do1(String inname)    {        File inp = new File(inname);        if (!inp.exists())        {            System.err.println("File " + inname + " does not exist");            return false;        }
        // Curse again for directories        if (inp.isDirectory())        {            boolean ok = true;            File[] jpgfiles = inp.listFiles();
            for (int i = 0; i < jpgfiles.length; i++)            {                File f = jpgfiles[i];                if (f.isDirectory())                {                    if (f.getName().equalsIgnoreCase("archive"))                    {                        continue;                    }                    if (!do1(f.getAbsolutePath()))                    {                        ok = false;                    }                }
                String low = f.getName().toLowerCase();                // Don't mess with thumbnails!                if (low.indexOf("_thumb") >= 0 || low.indexOf("thumb_") >= 0)                {                    continue;                }
                if (!low.endsWith(".jpg") && !low.endsWith(".jpeg") && !low.endsWith(".png") &&                		!low.endsWith(".gif") && !low.endsWith(".tiff"))                {                    continue;                }
                if (!do1(f.getAbsolutePath()))                {                    ok = false;                }            }
            return ok;        }
        try        {            BufferedImage inimg = ImageIO.read(inp);            int w = inimg.getWidth();            int h = inimg.getHeight();
            // Read the thumbnail size as well            int pos1 = inname.lastIndexOf('.');            int pos2 = inname.lastIndexOf('\\');            int tw;            int th;            try            {	            String tinname = inname.substring(0, pos2) + "\\thumbs\\" + inname.substring(pos2+1, pos1) +	                "_thumb" + inname.substring(pos1);	            //System.out.println("thumbnail = " + tinname);	            File tinp = new File(tinname);	            BufferedImage tinimg = ImageIO.read(tinp);	            tw = tinimg.getWidth();	            th = tinimg.getHeight();            }            catch (Exception ex)            {            	tw = 0;            	th = 0;            }
            //int dpi = 0;
            // Seeking DPI. No dice.            //String[] names = inimg.getPropertyNames();            //if (names != null)            //{            //    for (int i = 0; i < names.length; i++)            //    {            //        System.out.println("***" + names[i] + " = " + inimg.getProperty(names[i]));            //    }            //}            //System.out.println("Source = " + inimg.getSource().getClass().getName()); // sun.awt.image.OffScreenImageSource            //System.out.println("Raster = " + inimg.getRaster().getClass().getName()); // sun.awt.image.ByteInterleavedRaste            //System.out.println("ColorModel = " + inimg.getColorModel().getClass().getName()); // java.awt.image.ComponentColorModel
            // No luck here eithe            //JPEGImageDecoder decoder = JPEGCodec.createJPEGDecoder(new FileInputStream(inp));            //JPEGDecodeParam param = decoder.getJPEGDecodeParam(); // always null :(            //if (param != null) System.out.println("X Density = " + param.getXDensity());
            // Third try is not a charm            //ImageInfo ii = new ImageInfo();            //ii.setInput(new FileInputStream(inp));            //ii.check();            //int dpi = (int) ii.getPhysicalHeightInch();            //if (dpi < 0) dpi = 0;   // Don't know            
            String canon = inp.getCanonicalPath();            int dot = canon.lastIndexOf('.');            int slash = canon.lastIndexOf('\\');            //int photodir = canon.indexOf("photos") + 7;
            int photodir = canon.indexOf(root) + root.length();
            String caption = "";            int mon = 0;            int day = 0;            int yr = 0;            String picname = inp.getName();                        if (mon == 0 && picname.length() > 8)            {            	if (picname.substring(4, 6).equals("20"))	// Start of the year            	{            		try            		{	            		mon = Integer.parseInt(picname.substring(0, 2));	            		day = Integer.parseInt(picname.substring(2, 4));	            		yr = Integer.parseInt(picname.substring(4, 8));	                    if (yr < 2000 || yr > 2100 || mon < 1 || mon > 12 || day < 1 || day > 31)	                    {	                    	mon = 0;	                    }            		}            		catch (Exception ex)            		{            			mon = 0;            		}            	}            }                        //System.out.println("picname = " + picname);            if (mon == 0 && picname.startsWith("20") && picname.length() > 8)            {            	try            	{            		if (picname.substring(0, 8).indexOf('-') < 0)            		{	            		// Look for YYYYMMDD	            		yr = Integer.parseInt(picname.substring(0, 4));	            		mon = Integer.parseInt(picname.substring(4, 6));	            		day = Integer.parseInt(picname.substring(6, 8));	            		//System.out.println("YYYYMMDD: " + yr + " " + mon + " " + day);            		}            	}            	catch (Exception ex)            	{            		mon = 0;            	}                if (mon == 0)                {                	try                	{                		char ch5 = picname.charAt(4);                		char ch8 = picname.charAt(7);                		if (ch5 == ch8 && (ch5 == '-' || ch5 == '_'))                		{	                		// Look for YYYY-MM-DD and YYYY_MM_DD	                		yr = Integer.parseInt(picname.substring(0, 4));	                		mon = Integer.parseInt(picname.substring(5, 7));	                		day = Integer.parseInt(picname.substring(8, 10));		            		//System.out.println("YYYY-MM-DD: " + yr + " " + mon + " " + day);                		}                	}                	catch (Exception ex)                	{                		mon = 0;                	}                }            }            if (mon == 0 && picname.startsWith("IMG_20") && picname.length() > 12)            {        		try        		{            		yr = Integer.parseInt(picname.substring(4, 8));            		mon = Integer.parseInt(picname.substring(8, 10));            		day = Integer.parseInt(picname.substring(10, 12));                    if (yr < 2000 || yr > 2100 || mon < 1 || mon > 12 || day < 1 || day > 31)                    {                    	mon = 0;                    }        		}        		catch (Exception ex)        		{        			mon = 0;        		}            }                        if (mon == 0 && picname.startsWith("download_20") && picname.length() > 19)            {        		try        		{            		yr = Integer.parseInt(picname.substring(9, 13));            		mon = Integer.parseInt(picname.substring(13, 15));            		day = Integer.parseInt(picname.substring(15, 17));                    if (yr < 2000 || yr > 2100 || mon < 1 || mon > 12 || day < 1 || day > 31)                    {                    	mon = 0;                    }        		}        		catch (Exception ex)        		{        			mon = 0;        		}            }                        if (yr < 2000 || yr > 2100 || mon < 1 || mon > 12 || day < 1 || day > 31)            {            	mon = calmon;            	day = calday;            	yr = calyr;            }
            String dir = canon.substring(photodir,slash);
			String origPath = Integer.toString(yr);
			if (mon <= 4) origPath += 'a';
			else if (mon <= 8) origPath += 'b';
			else origPath += 'c';
            String original = "/originals/Year_" + yr + "/" + origPath + "/" + canon.substring(slash+1,dot) + canon.substring(dot);                        File origFile = new File(root + original);            if (! origFile.exists())            {            	System.err.println("***** WARNING: file does not exist: " + root + original.replaceAll("/", "\\\\"));            }
            String left = dir.replace('\\','/') + ";" + canon.substring(slash+1,dot) + ";" + canon.substring(dot) + ";";            String right = w + ";" + h + ";" + tw + ";" + th;
            if (doDate)
            {
				System.out.println(left + original.replaceAll("_pdf.jpg", ".pdf") + ";" + mon + ";" + day + ";" + yr + ";" + right + ";" + caption);
			}
			else
			{
				System.out.println(left + right);
			}
        }        catch (Exception ex)        {            ex.printStackTrace();            return false;        }        return true;    }    
    public static void main(String[] args)    {        PicInfo pi = new PicInfo();
        if (args.length <= 1)        {            System.out.println("Usage: PicInfo root img1.jpg img2.jpg ...");            System.exit(0);        }        pi.root = args[0];
        for (int i = 1; i < args.length; i++)        {			if (args[i].equalsIgnoreCase("-noDate"))
			{
				pi.doDate = false;
			}
			else
			{
            	pi.do1(args[i]);			}
        }    }
}